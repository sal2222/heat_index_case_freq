---
title: "Heat indices and heat illness case frequencies"
format:
  html:
    embed-resources: true
---


```{r echo = FALSE, message = FALSE}

library(tidyverse)
library(skimr)
library(patchwork)
library(lubridate)

```




```{r echo = FALSE}
# Load data

cc_exposure_df <-
  read_rds(file = "E:/Columbia Files 2022/R Project Folders/daily_heat/data/cc_exposure_df_rod.rds")

```


## Data summary (heat illness cases only)
```{r warning = FALSE, echo = FALSE}

cc_exposure_df %>% 
  dplyr::filter(case == 1) %>% # exclude case-crossover controls
  skimr::skim()

```


## Locations

```{r echo = FALSE}

cc_exposure_df %>% 
  dplyr::filter(case == 1) %>% 
  count(site_name) %>% 
  arrange(desc(n)) %>% 
  as.data.frame() # show full list

```



```{r echo = FALSE, results = FALSE}
## Clean/prepare dataset

to_density_plot_all <-
  cc_exposure_df %>%
    filter(case == 1) %>% 
    dplyr::select(site_name, d_event, tmp_f_mean, tmp_f_max,
                  hi_f_mean, hi_f_max,
                  wbgt_f_mean, wbgt_f_max, hsi) %>%
   pivot_longer(-c(site_name, d_event, hsi), names_to = "Index", values_to = "Value") %>% 
    mutate(index = 
           case_when(
                   Index %in% c("tmp_f_mean", "tmp_f_max") ~ "Temperature",
      Index %in% c("hi_f_mean", "hi_f_max")  ~ "Heat Index",
      Index %in% c("wbgt_f_mean", "wbgt_f_max") ~ "WBGT"),
          type = 
           case_when(
                   Index %in% c("tmp_f_mean", "hi_f_mean", "wbgt_f_mean") ~ "Mean",
      Index %in% c("tmp_f_max", "hi_f_max", "wbgt_f_max")    ~ "Max"),
      index = fct_relevel(index, "Temperature", "Heat Index", "WBGT"),
      type = fct_relevel(type, "Max", "Mean")
    ) 
  
to_density_plot_all

# write_rds(to_density_plot_all, "G:/My Drive/research/heat_index_case_freq/data/to_density_plot_all.rds")

```


## Summary Tables of Index values on Case days
```{r echo = FALSE, message = FALSE}

# Mean and median values

mean_median <- 
  to_density_plot_all %>% 
  group_by(index, type) %>% 
  summarise(mean = mean(Value),
            median = median(Value)) 


mean_median


mean_median %>%
  pivot_longer(-c(index, type), names_to = "Statistic", values_to = "Value") %>%
  unite("Index", index:type, sep = "_", remove = FALSE, na.rm = FALSE) %>% 
  mutate(type = recode(type, Max = "Maximum Daily", Mean = "Mean Daily")) %>% 
  ggplot(aes(x = Statistic, y = Value, fill = index)) +
    geom_col(position = "dodge") + 
    facet_wrap(~ type + index) +
    geom_text(aes(label = sprintf("%0.1f", round(Value, digits = 1))), vjust = 1.5, color = "white", position = position_dodge(.9))



```


## WBGT Heat Categories

```{r echo = FALSE, warning = FALSE}

# Heat categories

wbgt_heat_cat <-
  to_density_plot_all %>%
  dplyr::filter(index %in% "WBGT") %>% 
    mutate(HeatCat = case_when(
                   Value < 78 ~ 0,
                   Value >= 78 & Value < 82 ~ 1,
                   Value >= 82 & Value < 85 ~ 2,
                   Value >= 85 & Value < 88 ~ 3,
                   Value >= 88 & Value < 90 ~ 4,
                   Value >= 80  ~ 5),
           HeatCat = as_factor(HeatCat))



# n = 32,426 cases

# Maximum daily WBGT (deg F) on heat illness case days
wbgt_heat_cat %>% 
  dplyr::filter(type %in% "Max") %>% 
  count(HeatCat)


# Frequency of maximum WBGT Heat Category on heat illness case days
#1996 - 2019, 24 CONUS military installations, n = 32,426
wbgt_heat_cat %>% 
  dplyr::filter(type %in% "Max") %>%
  count(HeatCat) %>% 
   ggplot(aes(x = HeatCat, y = n, fill = HeatCat)) +
    geom_col() + 
    geom_text(aes(label = n), vjust = -0.5) +
    scale_fill_manual("Heat Cat", values = c("1" = "white", "2" = "green", "3" = "yellow", "4" = "red", "5" = "black"))




```


## Cases by year, by month

```{r echo = FALSE}

cc_exposure_df %>%
  dplyr::filter(case == 1) %>% 
  mutate(year = as_factor(lubridate::year(d_event))) %>% 
  ggplot(aes(x = year)) +
  geom_bar() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))


cc_exposure_df %>%
  dplyr::filter(case == 1) %>% 
  mutate(month = as_factor(lubridate::month(d_event))) %>% 
  ggplot(aes(x = month)) +
  geom_bar() 
  
```



## Density plots

```{r echo = FALSE, warning = FALSE}
## Patchwork density plots: with Celsius scale
density_temp <-
  to_density_plot_all %>% 
    filter(index %in% "Temperature") %>% 
    ggplot(aes(x = Value, fill = type, colour = type)) +
      geom_density(alpha = 0.5) +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Temperature" & type %in% "Mean"))$median, size = 1, 
                 color = "#00BFC4", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Temperature" & type %in% "Max"))$median, size = 1,
                 color = "#F8766D", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Temperature" & type %in% "Mean"))$mean, size = 1,
                 color = "#00BFC4") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Temperature" & type %in% "Max"))$mean, size = 1,
                 color = "#F8766D") +
      geom_rug() +
      theme_bw() +
      labs(x = "Daily Temperature (°F)") +
      theme(axis.title.y = element_blank()) +
      scale_x_continuous(breaks = seq(from = 0, to = 120, by = 10),
                         sec.axis = sec_axis(trans = ~ (5/9) * (. - 32), name = "Daily Temperature (°C)",
                         breaks = seq(from = -20, to = 50, by = 10))) +
      scale_y_continuous(breaks = seq(from = 0.00, to = 0.10, by = 0.02), limits = c(0.00, 0.10)) 


density_temp                          

density_hi <-
  to_density_plot_all %>% 
    filter(index %in% "Heat Index") %>% 
    ggplot(aes(x = Value, fill = type, colour = type)) +
      geom_density(alpha = 0.5) +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Heat Index" & type %in% "Mean"))$median, size = 1, 
                 color = "#00BFC4", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Heat Index" & type %in% "Max"))$median, size = 1,
                 color = "#F8766D", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Heat Index" & type %in% "Mean"))$mean, size = 1,
                 color = "#00BFC4") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "Heat Index" & type %in% "Max"))$mean, size = 1,
                 color = "#F8766D") +
      geom_rug() +
      theme_bw() +
      labs(x = "Daily Heat Index (°F)") +
      theme(axis.title.y = element_blank()) +
      scale_x_continuous(breaks = seq(from = 0, to = 120, by = 10),
                         sec.axis = sec_axis(trans = ~ (5/9) * (. - 32), name = "Daily Heat Index (°C)",
                         breaks = seq(from = -20, to = 50, by = 10))) +
      scale_y_continuous(breaks = seq(from = 0.00, to = 0.10, by = 0.02), limits = c(0.00, 0.10))

density_hi


density_wbgt <-
  to_density_plot_all %>% 
    filter(index %in% "WBGT") %>% 
    ggplot(aes(x = Value, fill = type, colour = type)) +
      geom_density(alpha = 0.5) +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "WBGT" & type %in% "Mean"))$median, size = 1, 
                 color = "#00BFC4", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "WBGT" & type %in% "Max"))$median, size = 1,
                 color = "#F8766D", linetype = "dashed") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "WBGT" & type %in% "Mean"))$mean, size = 1,
                 color = "#00BFC4") +
      geom_vline(xintercept = (mean_median %>% filter(index %in% "WBGT" & type %in% "Max"))$mean, size = 1,
                 color = "#F8766D") +
      geom_rug() +
      theme_bw() +
      labs(x = "Daily WBGT (°F)") +
      theme(axis.title.y = element_blank()) +
      scale_x_continuous(breaks = seq(from = 0, to = 120, by = 10),
                         sec.axis = sec_axis(trans = ~ (5/9) * (. - 32), name = "Daily WBGT (°C)",
                         breaks = seq(from = -20, to = 50, by = 10))) +
      scale_y_continuous(breaks = seq(from = 0.00, to = 0.10, by = 0.02), limits = c(0.00, 0.10))

density_wbgt

# patchwork grid plot

#plot_density_c <-
#  (density_temp | density_hi | density_wbgt) + 
#    plot_layout(guides = "collect") + 
#    plot_annotation(tag_levels = 'A') & 
#    theme(legend.position = "bottom")

#plot_density_c
```



